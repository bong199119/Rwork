str(VADeaths)
# num [1:5, 1:4]  ->  matrix
summary(VADeaths)
# num [1:5, 1:4]  ->  matrix
summary(VADeaths)
boxplot(VADeaths)
boxplot(VADeaths, range = 0)
# 2) 히스토그램 시각화 : 대칭성 확인
iris
head
head(iris)
range(iris$Sepal.Length)
hist(iris$Sepal.Length, xlab = "sepal.length",
col = "magenta",
main = "iris 꽃받침 길이", xlim = c(4.3,7.9))
range(iris$Sepal.width)
range(iris$Sepal.width)
range(iris$Sepal.Width)
hist(iris$Sepal.Width,
xlab = "Sepal.Width",
col = " green",
main = " iris 꽃받침 넓이",
xlim = c(2.0, 4.4))
# 정규성 검정
shapiro.test(iris$Sepal.Length)
shapiro.test(iris$Sepal.Width)
# 3) 선점도 시각화
price <- runif(10, min =1, max =100)
price
plot(price) # 하나만 넣으면 y에 들어감, x축에는 index
plot(price, type="o")
plot(price, type="l")
plot(price, type="h")
plot(price, type="s")
par(mfrow=c(2,2))
plot(price, type="o")
plot(price, type="l")
plot(price, type="h")
plot(price, type="s")
par(mfrow=c(1,1))
data()
AirPassengers
plot(AirPassengers)
plot(AirPassengers)
plot(wwwusage)
plot(wwwusage)
plot(WWWusage)
install.packages("HistData")
library(HistData)
library(help="HistData")
data(Dalton)
data(Galton)
str(Galton)
model <- lm(child ~ parent)#lm(y~x)
model <- lm(child ~ parent, data = Galton)#lm(y~x)
model
# 회귀모델 관련 시각화
plot(model)
methods(plot)
# 3. 변수간의 비교 시각화
?parse()
parse(iris[1:4])
# 3. 변수간의 비교 시각화
?pairs()
pairs(iris[1:4])
#꽃의 종별 변수 비교
unique(iris$Species)
pairs(setosa[1:4])
pairs(iris[iris$Species == 'setosa',1:4])
pairs(iris[iris$Species == 'versicolor',1:4])
pairs(iris[iris$Species == 'virginica',1:4])
# 4. 차트 파일 저장
setwd("C:/rwork/data/output")
plot(iris$Sepal.Length, iris$Petal.Length)
jpeg("iris.jpg", width = 720, height = 480)
jpeg("iris.jpg", width = 720, height = 480)
plot(iris$Sepal.Length, iris$Petal.Length)
title("iris dataset 시각화")
dev.off()
pairs(iris[iris$Species == 'setosa',1:4])
#########################
### 3차원 산점도
#########################
install.packages('scatterplot3d')
library(scatterplot3d)
# 꽃의 종류별 분류
iris_setosa = iris[iris$Species == 'setosa',]
iris_versicolor = iris[iris$Species == 'versicolor',]
iris_virginica = iris[iris$Species == 'virginica',]
# scatterplot3d(밑변, 오른쪽변, 왼쪽변, type='n') # type='n' : 기본 산점도 제외
d3 <- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width, type='n')
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length,
iris_setosa$Sepal.Width, bg='orange', pch=21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length,
iris_versicolor$Sepal.Width, bg='blue', pch=23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length,
iris_virginica$Sepal.Width, bg='green', pch=25)
# 조건1) 1번 컬럼 x축, 3번 컬럼 y축으로 차트 작성(힌트 : plot(x, y)
iris
str(iris)
plot(iris$Sepal.Length, iris$Petal.Length)
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species)
# 조건3) "iris 데이터 테이블 산포도 차트" 제목 추가(힌트 : title("차트 제목")
title("iris 데이터 테이블 산포도 차트트")
# 조건3) "iris 데이터 테이블 산포도 차트" 제목 추가(힌트 : title("차트 제목")
title("iris 데이터 테이블 산포도 차트")
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species)
# 조건3) "iris 데이터 테이블 산포도 차트" 제목 추가(힌트 : title("차트 제목")
title("iris 데이터 테이블 산포도 차트")
# 02. 다음과 같은 단계별로 히스토그램 시각화하시오.
#  단계1) 표준정규분포를 따르는 난수 1,000개 생성(힌트 : rnorm() 함수 이용)
n<- 1000
rnorm(n)
a <- rnorm(n)
a
#  단계2) 히스토그램 시각화(각 계급의 밀도)
hist(a)
#  단계3) 정규성 유무 확인
shapiro.test(a)
#  단계2) 히스토그램 시각화(각 계급의 밀도)
hist(a, freq =F)
hist(a, freq =T)
# dataset
setwd("c:/rwork/data")
stock <- read.csv("stock.csv")
stock
str(stock)
#subset : 1~15
stock_df <- stock[c(1:15)]
str(stock_df)
head(stock_df)
#숫자(7~15) : 특수문자 제거, NA -> 0
stock_num <- apply(stock_df[c(7:15)], 2, data_pro)
stock_num
#subset : 1~15
stock_df <- stock[c(1:15)]
str(stock_df)
#숫자(7~15) : 특수문자 제거, NA -> 0
stock_num <- apply(stock_df[c(7:15)], 2, data_pro)
#특수문자 처리 함수 정의
data_pro <- function(data){
library(stringr) # in memory
# 1. 특수문자 제거
tmp <- str_replace_all(data, "\\$|\\(|\\,|\\)|\\%","" )
tmp
# 2. 문자열 -> 숫자형 변환
num <- as.numeric(tmp)
num*2
return(num)
}
#숫자(7~15) : 특수문자 제거, NA -> 0
stock_num <- apply(stock_df[c(7:15)], 2, data_pro)
stock_num
# 행단위 정렬
dim(iris)
idx <- order(iris$Sepal.Length) # 오름차순(index)
iris_df <- iris[idx,]
head(iris_df)
# 실습 데이터 파일 가져오기
setwd("c:/rwork/data/")
dataset <- read.csv("dataset/csv")
# 실습 데이터 파일 가져오기
setwd("c:/rwork/data/")
dataset <- read.csv("dataset.csv")
str(dataset)
# 1) 결측치 확인
summary(dataset)
# 2) 칼럼 기준 결측치 제거 : subset()
dataset2 <- subset(dataset, !is.na(price)) # (dataset, 조건식)
dim(dataset2)
head(dataset2)
# 3) 전체 칼럼 기준 결측치 제거 : na.omit()
dataset2 <- na.omit(dataset)
dataset2
dim(dataset2)
head(dataset2)
# 4) 결측치 처리(0으로 대체)
dataset$price2 <- ifelse(is.na(dataset$price), 0, dataset$price)
head(dataset, 30)
dataset[c("price","price2")]
# 5) 결측치 처리(평균으로 대체)
avg <- mean(dataset$price, na.rm = T)
# 5) 결측치 처리(평균으로 대체)
avg <- mean(dataset$price, na.rm = T)
avg
dataset$price3 <- ifelse(is.na(dataset$price), avg,dataset$price)
dataset
dataset[c("price","price2","price3")]
# 6) 통계적 방법 : 고객 유형별 NA 처리
# type : 1. 우수고객, 2. 보통고객, 3. 저조고객
# 1. 우수 : 8.75*1.5
# 2. 보통 : 8.75
# 3. 저조 : 8.75*0.5
dim(dataset) # 300 9
type <- rep(1:3, 100)
type
# 칼럼 추가
dataset$type <- type
head(dataset)
for(i in 1:nrow(dataset))
for(i in 1:nrow(dataset)){ # index : 300 반복
if(is.na(dataset$price[i])){
if(dataset$type == 1 ){
price4[i] = avg*1.5
}else if(dataset$type == 2){
price4[i] = avg
}else{
price4[i] = avg*0.5
}
}else{ # NOT NA
price4[i] <- dataset$price
}
}
price4 <- 0 # 통계적 방법
for(i in 1:nrow(dataset)){ # index : 300 반복
if(is.na(dataset$price[i])){
if(dataset$type == 1 ){
price4[i] = avg*1.5
}else if(dataset$type == 2){
price4[i] = avg
}else{
price4[i] = avg*0.5
}
}else{ # NOT NA
price4[i] <- dataset$price
}
}
length(price4)
# 칼럼 추가
dataset$price4 <- price4
dataset[c("price","price2","price3","price4")]
dataset
for(i in 1:nrow(dataset)){ # index : 300 반복
if(is.na(dataset$price[i])){
if(dataset$type[i] == 1 ){
price4[i] = avg*1.5
}else if(dataset$type == 2){
price4[i] = avg
}else{
price4[i] = avg*0.5
}
}else{ # NOT NA
price4[i] <- dataset$price
}
}
length(price4)
# 칼럼 추가
dataset$price4 <- price4
dataset[c("price","price2","price3","price4")]
dataset
for(i in 1:nrow(dataset)){ # index : 300 반복
if(is.na(dataset$price[i])){
if(dataset$type[i] == 1 ){
price4[i] = avg*1.5
}else if(dataset$type[i] == 2){
price4[i] = avg
}else{
price4[i] = avg*0.5
}
}else{ # NOT NA
price4[i] <- dataset$price[i]
}
}
# 칼럼 추가
dataset$price4 <- price4
dataset[c("price","price2","price3","price4")]
dataset
# (1) 범주형(명목, 서열) 극단치 처리
gender <- dataset$gender
gender
# 빈도수 확인
table(gender)
pie(table(gender))
# 이상치 정제
dataset <- subset(dataset, gender == 1 | gender == 2)
pie(table(datase$gender))
pie(table(dataset$gender))
plot(price)
# 2) 비율척도 이상치 처리
price <- dataset$price # 구매금액
plot(price)
boxplot(price)
boxplot(price)$stats
# 이상치 정제
dataset2 <- dataset
dataset2
price <- ifelse(dataset$price >= 2.1 & dataset$price <= 7.9)
dataset2 <- subset(dataset, price >=2.1 & price <= 7.9)
dataset2
plot(dataset2$price)
# age 변수 이상치 처리
summary(dataset$age)
# age 변수 이상치 처리
summary(dataset2$age)
dataset2 <- subset(dataset2, age >= 20 & age <= 69)
plot(dataset2$age)
dataset2 <- subset(dataset2, age >= 20 & age <= 69)
plot(dataset2$age)
# 01. 본문에서 생성된 dataset2의 resident 칼럼을 대상으로 NA 값을 제거하시오.(힌트 : subset()함수 이용)
str(dataset2)
dataset3 <- ifelse(is.na(dataset2$resident), 0, dataset2$resident)
dataset3
dataset2$resident <- ifelse(is.na(dataset2$resident), 0, dataset2$resident)
dataset2
# 02. dataset2의 gender 칼럼을 대상으로 1->"남자", 2->"여자" 형태로 코딩 변경하여
# gender2 칼럼에 추가하고, 파이 차트로 결과를 확인하시오.
head(dataset2)
summary(dataset2)
plot(dataset2)
plot(dataset2$gender)
dataset2$gender2 <- ifelse(dataset2$gender==1, "남자","여자")
dataset2
pie(dataset2$gender2)
pie(dataset2$gender)
pie(dataset2$gender2)
plot(dataset2$gender)
pie(table(dataset2$gender2))
# 03. 나이를 30세 이하 -> 1, 31~55 -> 2, 56이상 -> 3 으로 코딩변경하여 age3 칼럼에 추가한 후
# age, age2, age3 칼럼만 확인하시오.
age3 <- 0
for(i in 1:nrow(dataset2)){
if(dataset2$age <= 30){
age3[i] <- 1
}else if(dataset2$age >=56){
age3[i] <- 3
}else{
age3[i] <- 2
}
}
dataset$age3 <- age3
dataset
dataset2$age3 <- age3
dataset2
for(i in 1:nrow(dataset2)){
if(dataset2$age[i] <= 30){
age3[i] <- 1
}else if(dataset2$age[i] >=56){
age3[i] <- 3
}else{
age3[i] <- 2
}
}
dataset2$age3 <- age3
dataset2
# 04. ggplot2 패키지에서 제공하는 mpg 데이터셋을 대상으로 이상치를 발견하고, 제거하시오.
library(ggplot2)
mpg <- as.data.frame(mpg)
mpg
# 04. ggplot2 패키지에서 제공하는 mpg 데이터셋을 대상으로 이상치를 발견하고, 제거하시오.
library(ggplot2)
mpg <- as.data.frame(mpg)
mpg
# 01. 본문에서 생성된 dataset2의 resident 칼럼을 대상으로 NA 값을 제거하시오.(힌트 : subset()함수 이용)
str(dataset2)
dataset2$resident <- ifelse(is.na(dataset2$resident), 0, dataset2$resident)
dataset2
# 02. dataset2의 gender 칼럼을 대상으로 1->"남자", 2->"여자" 형태로 코딩 변경하여
# gender2 칼럼에 추가하고, 파이 차트로 결과를 확인하시오.
head(dataset2)
summary(dataset2)
plot(dataset2$gender)
dataset2$gender2 <- ifelse(dataset2$gender==1, "남자","여자")
dataset2
pie(table(dataset2$gender2))
# 03. 나이를 30세 이하 -> 1, 31~55 -> 2, 56이상 -> 3 으로 코딩변경하여 age2 칼럼에 추가한 후
# age, age2 칼럼만 확인하시오.
age3 <- 0
for(i in 1:nrow(dataset2)){
if(dataset2$age[i] <= 30){
age3[i] <- 1
}else if(dataset2$age[i] >=56){
age3[i] <- 3
}else{
age3[i] <- 2
}
}
dataset2$age3 <- age3
dataset2
# 04. ggplot2 패키지에서 제공하는 mpg 데이터셋의 hwy 변수를 대상으로 이상치를 발견하고, 제거하시오.
install.packages("ggplot2")
library(ggplot2)
mpg <- as.data.frame(mpg)
# 04. ggplot2 패키지에서 제공하는 mpg 데이터셋의 hwy 변수를 대상으로 이상치를 발견하고, 제거하시오.
install.packages("ggplot2")
mpg <- as.data.frame(mpg)
mpg
str(mpg)
head(mpg)
mpg$hwy
summary(mpg$hwy)
# 단계1) 상자그래프와 통계량
boxplot(mpg$hwy, range=0)
# 단계2) 이상치 제거
mpg$hwy <- subset(mpg$hwy, mpg$hwy>=30|mpg$hwy<=15)
boxplot(mpg$hwy, range=0)
# 단계2) 이상치 제거
mpg$hwy <- subset(mpg, hwy>=30|hwy<=15)
# 단계2) 이상치 제거
mpg <- subset(mpg, hwy>=30|hwy<=15)
boxplot(mpg$hwy, range=0)
summary(mpg$hwy)
# 단계1) 상자그래프와 통계량
boxplot(mpg$hwy, range=0)stats
# 단계1) 상자그래프와 통계량
boxplot(mpg$hwy, range=0)$stats
mpg <- as.data.frame(mpg)
mpg
str(mpg)
head(mpg)
summary(mpg$hwy)
# 단계1) 상자그래프와 통계량
boxplot(mpg$hwy, range=0)$stats
# 04. ggplot2 패키지에서 제공하는 mpg 데이터셋의 hwy 변수를 대상으로 이상치를 발견하고, 제거하시오.
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
mpg <- as.data.frame(mpg)
mpg
str(mpg)
head(mpg)
summary(mpg$hwy)
# 단계1) 상자그래프와 통계량
boxplot(mpg$hwy, range=0)$stats
# 단계2) 이상치 제거
mpg2 <- subset(mpg, hwy>=30|hwy<=15)
boxplot(mpg2$hwy, range=0)
summary(mpg2$hwy)
dataset2[c("age","age3")]
# 04. ggplot2 패키지에서 제공하는 mpg 데이터셋의 hwy 변수를 대상으로 이상치를 발견하고, 제거하시오.
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
mpg <- as.data.frame(mpg)
# 단계1) 상자그래프와 통계량
boxplot(mpg$hwy, range=0)$stats
summary(mpg$hwy)
# 단계1) 상자그래프와 통계량
boxplot(mpg$hwy)$stats
pie(table(dataset2$gender2))
# 단계2) 이상치 제거
mpg2 <- subset(mpg, hwy>=30|hwy<=15)
# 단계1) 상자그래프와 통계량
boxplot(mpg$hwy)$stats
# 1) 데이터 가독성
table(dataset2$resident)
dataset2$resident2[dataset2$resident ==1] <- "1.서울시"
dataset2$resident2[dataset2$resident ==2] <- "1.인천시"
dataset2$resident2[dataset2$resident ==3] <- "1.대전시"
dataset2$resident2[dataset2$resident ==4] <- "1.대구시"
dataset2$resident2[dataset2$resident ==5] <- "1.부산시"
# 2) 척도변경(연속형 -> 범주형)
dataset2$age2[dataset2$age <= 30] <- "청년층"
dataset2$age2[dataset2$age > 30 & dataset2$age <= 55] <- "청년층"
dataset2$age2[dataset2$age > 55] <- "청년층"
dataset2[c("age","age2")]
setwd("c:/Rwork/data")
new_data <- read.csv("new_data.csv", header=TRUE)
# 1) 명목척도(범주/서열) vs 명목척도(범주/서열)
# - 거주지역과 성별 칼럼 시각화
resident_gender <- table(new_data$resident2, new_data$gender2)
str(new_data)
# 1) 명목척도(범주/서열) vs 명목척도(범주/서열)
# - 거주지역과 성별 칼럼 시각화
resident_gender <- table(new_data$resident2, new_data$gender2)
resident_gender
gender_resident <- table(new_data$gender2, new_data$resident2)
gender_resident
# 성별에 따른 거주지역 분포 현황
barplot(resident_gender, beside=T, horiz=T,
col = rainbow(5),
legend = row.names(resident_gender),
main = '성별에 따른 거주지역 분포 현황')
# 2) 비율척도(연속) vs 명목척도(범주/서열)
# - 나이와 직업유형에 따른 시각화
install.packages("lattice")  # chap08
library(lattice)
library(lattice)
library(ggplot2)
# 직업유형에 따른 나이 분포 현황
densityplot( ~ age, data=new_data, groups = job2,
plot.points=T, auto.key = T)
# (1) 성별에 따른 직급별 구매비용 분석
densityplot(~ price | factor(gender2), data=new_data,
groups = position2, plot.points=T, auto.key = T)
age <- new_data$age
price<- new_data$price
cor(new_data[c("age","price")])
cor(age, price, na.rm=T)
new_data <- na.omit(new_data)
age <- new_data$age
price<- new_data$price
df<-data.frame(age, price)
cor(df)
plot(df$age, df$price) # (y~x)
# 3. 이항 분포를 따르는 정수 난수 생성
# rbinom(n, size, prob)
# size : simple size, prob : 나올 수 있는 확률
n <- 10
r3 <- rbinom(n, size =1, prob = 0.5) # 1/2
r3 # [1] 1 0 0 0 1 0 1 1 1 1
hist(r3)
# 차트 데이터 생성
chart_data <- c(305,450, 320, 460, 330, 480, 380, 520)
names(chart_data) <- c("2014 1분기","2015 1분기","2014 2분기","2015
2분기","2014 3분기","2015 3분기","2014 4분기","2015 4분기")
str(chart_data)
chart_data
# 1) 막대차트 시각화
barplot(chart_data, ylim = c(0, 700),
col= rainbow(8),
main = "2016년도 vs 2017년도 분기별 매출현황")
